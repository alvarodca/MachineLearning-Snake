import os

# Input ARFF filename (the one generated by SnakeGame)
input_arff = "all_data_snake.arff"

# Output ARFF filenames
output_arff1 = "filter_data_snake_manual1.arff"
output_arff2 = "filter_data_snake_manual2.arff"

# Define header for file1
header1 = """@RELATION snake_game_manual1

@ATTRIBUTE Head_x NUMERIC
@ATTRIBUTE Head_y NUMERIC
@ATTRIBUTE Food_x NUMERIC
@ATTRIBUTE Food_y NUMERIC
@ATTRIBUTE Score NUMERIC
@ATTRIBUTE Dist_left_border NUMERIC
@ATTRIBUTE Dist_right_border NUMERIC
@ATTRIBUTE Dist_top_border NUMERIC
@ATTRIBUTE Dist_bottom_border NUMERIC
@ATTRIBUTE Tail_x NUMERIC
@ATTRIBUTE Tail_y NUMERIC
@ATTRIBUTE Horizontal_weight NUMERIC
@ATTRIBUTE Vertical_weight NUMERIC
@ATTRIBUTE Direction {RIGHT, LEFT, UP, DOWN}

@DATA
"""

# Define header for file2
header2 = """@RELATION snake_game_manual2

@ATTRIBUTE Head_x NUMERIC
@ATTRIBUTE Head_y NUMERIC
@ATTRIBUTE Dist_body_x1 NUMERIC
@ATTRIBUTE Dist_body_y1 NUMERIC
@ATTRIBUTE Dist_body_x2 NUMERIC
@ATTRIBUTE Dist_body_y2 NUMERIC
@ATTRIBUTE Dist_body_x3 NUMERIC
@ATTRIBUTE Dist_body_y3 NUMERIC
@ATTRIBUTE Dist_body_x4 NUMERIC
@ATTRIBUTE Dist_body_y4 NUMERIC
@ATTRIBUTE Length NUMERIC
@ATTRIBUTE Direction {RIGHT, LEFT, UP, DOWN}

@DATA
"""

# The indexes for the desired attributes (from print_line_data order):
# print_line_data returns:

# 1 Head_x
# 2 Head_y
# 3 Food_x
# 4 Food_y
# 5 Score
# 6 Dist_left_border
# 7 Dist_right_border
# 8 Dist_top_border
# 9 Dist_bottom_border
# 10 Dist_body_x1  (not used)
# 11 Dist_body_y1  (not used)
# 12 Dist_body_x2  (not used)
# 13 Dist_body_y2  (not used)
# 14 Dist_body_x3  (not used)
# 15 Dist_body_y3  (not used)
# 16 Dist_body_x4  (not used)
# 17 Dist_body_y4  (not used)
# 18 Tail_x
# 19 Tail_y
# 20 Horizontal_weight
# 21 Vertical_weight
# 22 Length
# 22 Direction
#
# For file1, we need indexes: 0,1,2,3,4,5,6,7,8,9
# For file2, we need indexes: 0,1,2,18,19,20,21,22

# Read data from input ARFF (skip header lines until @DATA)
with open(input_arff, 'r') as f:
    all_lines = f.readlines()

data_index = None
for idx, line in enumerate(all_lines):
    if line.strip().upper() == "@DATA":
        data_index = idx + 1  # data begins in the next line
        break

if data_index is None:
    print("Error: No @DATA section found in input ARFF file.")
    exit(1)

# Get only data rows (ignoring empty lines and comments)
data_rows = [line.strip() for line in all_lines[data_index:] if line.strip() and not line.strip().startswith("%")]

# Process each data row and filter columns
data_file1 = []
data_file2 = []
for row in data_rows:
    elements = [el.strip() for el in row.split(',')]
    # Ensure there are enough elements
    if len(elements) < 23:
        continue
    # Get subset for file1
    subset1 = [elements[i] for i in [0,1,2,3,4,5,6,7,8,17,18,19,20,22]]
    # Get subset for file2
    subset2 = [elements[i] for i in [0,1,9,10,11,12,13,14,15,16,21,22]]
    data_file1.append(','.join(subset1))
    data_file2.append(','.join(subset2))

# Write to output ARFF files
with open(output_arff1, 'w') as f1:
    f1.write(header1)
    f1.write('\n'.join(data_file1))
    f1.write('\n')

with open(output_arff2, 'w') as f2:
    f2.write(header2)
    f2.write('\n'.join(data_file2))
    f2.write('\n')

print("Split complete. Two files created:")
print(f" - {output_arff1}")
print(f" - {output_arff2}")